version: "3.9"

services:
  postgres:
    image: postgres:17
    container_name: discodeit-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    ports:
      - "${DB_PORT}:5432"
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 256m

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROJECT_NAME: ${APP_NAME}
        PROJECT_VERSION: ${APP_VERSION}
    container_name: discodeit-app
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_LOCAL_ROOT_PATH: ${STORAGE_LOCAL_ROOT_PATH}

      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_PRESIGNED_URL_EXPIRATION: ${AWS_S3_PRESIGNED_URL_EXPIRATION}
    volumes:
      - app-binary-content:/app/storage
    ports:
      - "8081:80"
    deploy:
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 256m

volumes:
  postgres-data:
  app-binary-content: